---
interface Props {
  title: string;
  description: string;
  category: string;
  publishDate: Date;
  author: string;
  slug: string;
  lang: 'es' | 'en';
  image?: {
    src: string;
    alt: string;
  };
  featured?: boolean;
  readingTime?: number;
  tags?: string[];
}

const {
  title,
  description,
  category,
  publishDate,
  author,
  slug,
  lang,
  image,
  featured = false,
  readingTime,
  tags = [],
} = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat(lang === 'es' ? 'es-MX' : 'en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  }).format(date);
};
---

<article class="group bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden h-full flex flex-col">
  <a href={`/${lang}/blog/${slug}`} class="flex-1 flex flex-col">
    {image && (
      <div class="aspect-video overflow-hidden flex-shrink-0">
        <img
          src={image.src}
          alt={image.alt}
          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
          loading="lazy"
        />
      </div>
    )}

    <div class="p-6 flex-1 flex flex-col">
      <div class="flex items-center gap-2 mb-3">
        <span class="inline-block px-3 py-1 bg-red-50 text-red-600 text-xs font-semibold rounded-full uppercase tracking-wide">
          {category}
        </span>
        {featured && (
          <span class="inline-block px-3 py-1 bg-yellow-50 text-yellow-600 text-xs font-semibold rounded-full uppercase tracking-wide">
            {lang === 'es' ? 'Destacado' : 'Featured'}
          </span>
        )}
      </div>

      <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-red-600 transition-colors line-clamp-2 flex-shrink-0">
        {title}
      </h3>

      <p class="text-gray-600 text-sm mb-4 line-clamp-3 flex-1">
        {description}
      </p>

      <div class="flex items-center justify-between text-xs text-gray-500 pt-4 border-t border-gray-100">
        <div class="flex items-center gap-2">
          <span class="font-medium">{author}</span>
          <span>â€¢</span>
          <span>{formatDate(publishDate)}</span>
        </div>
        {readingTime && (
          <span>{readingTime} min</span>
        )}
      </div>

      {tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mt-3">
          {tags.slice(0, 3).map((tag) => (
            <span class="text-xs text-gray-500">
              #{tag}
            </span>
          ))}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
